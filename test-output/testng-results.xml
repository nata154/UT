<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="5" total="15" passed="6" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-11-29T08:14:32Z" name="Suite" finished-at="2018-11-29T08:14:32Z" duration-ms="258">
    <groups>
      <group name="triangleExists">
        <method signature="Test_getSquareOfTriangle.test_getSquareRectangTrianAnotherEquation()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@1190200a]" name="test_getSquareRectangTrianAnotherEquation" class="triangle_test.Test_getSquareOfTriangle"/>
        <method signature="Test_getSquareOfTriangle.test_getSquare()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@2d2ffcb7]" name="test_getSquare" class="triangle_test.Test_getSquareOfTriangle"/>
        <method signature="Test_getSquareOfTriangle.test_getSquareRectangTrianAnotherEquation()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@2d2ffcb7]" name="test_getSquareRectangTrianAnotherEquation" class="triangle_test.Test_getSquareOfTriangle"/>
      </group> <!-- triangleExists -->
    </groups>
    <test started-at="2018-11-29T08:14:32Z" name="First test suite" finished-at="2018-11-29T08:14:32Z" duration-ms="81">
      <class name="triangle_test.Test_getSquareOfTriangle">
        <test-method signature="test_SquareOverflow()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@1190200a]" started-at="2018-11-29T11:14:32Z" name="test_SquareOverflow" finished-at="2018-11-29T11:14:32Z" duration-ms="16" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method Test_getSquareOfTriangle.test_SquareOverflow()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@1190200a] should have thrown an exception of type class java.lang.Exception]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method Test_getSquareOfTriangle.test_SquareOverflow()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@1190200a] should have thrown an exception of type class java.lang.Exception
	at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:89)
	at org.testng.internal.Invoker.handleInvocationResults(Invoker.java:1416)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:695)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_SquareOverflow -->
        <test-method signature="test_getSquareNegManual()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@1190200a]" started-at="2018-11-29T11:14:32Z" name="test_getSquareNegManual" finished-at="2018-11-29T11:14:32Z" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Calculates square of triangle with negative side]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Calculates square of triangle with negative side
	at org.testng.Assert.fail(Assert.java:93)
	at triangle_test.Test_getSquareOfTriangle.test_getSquareNegManual(Test_getSquareOfTriangle.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getSquareNegManual -->
        <test-method signature="test_getSquareNegativeSide()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@1190200a]" started-at="2018-11-29T11:14:32Z" name="test_getSquareNegativeSide" finished-at="2018-11-29T11:14:32Z" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [6] but found [6.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [6] but found [6.0]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at triangle_test.Test_getSquareOfTriangle.test_getSquareNegativeSide(Test_getSquareOfTriangle.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getSquareNegativeSide -->
        <test-method signature="test_getSquareRectangTrianAnotherEquation()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@1190200a]" started-at="2018-11-29T11:14:32Z" name="test_getSquareRectangTrianAnotherEquation" finished-at="2018-11-29T11:14:32Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getSquareRectangTrianAnotherEquation -->
        <test-method signature="test_getSquareTrCantExist()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@1190200a]" started-at="2018-11-29T11:14:32Z" name="test_getSquareTrCantExist" finished-at="2018-11-29T11:14:32Z" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [3] but found [NaN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [3] but found [NaN]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at triangle_test.Test_getSquareOfTriangle.test_getSquareTrCantExist(Test_getSquareOfTriangle.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getSquareTrCantExist -->
      </class> <!-- triangle_test.Test_getSquareOfTriangle -->
    </test> <!-- First test suite -->
    <test started-at="2018-11-29T08:14:32Z" name="Second test suite" finished-at="2018-11-29T08:14:32Z" duration-ms="7">
      <class name="triangle_test.Test_getSquareOfTriangle">
        <test-method signature="test_getSquare()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@2d2ffcb7]" started-at="2018-11-29T11:14:32Z" name="test_getSquare" finished-at="2018-11-29T11:14:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getSquare -->
        <test-method signature="test_getSquareRectangTrianAnotherEquation()[pri:0, instance:triangle_test.Test_getSquareOfTriangle@2d2ffcb7]" started-at="2018-11-29T11:14:32Z" name="test_getSquareRectangTrianAnotherEquation" finished-at="2018-11-29T11:14:32Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getSquareRectangTrianAnotherEquation -->
      </class> <!-- triangle_test.Test_getSquareOfTriangle -->
    </test> <!-- Second test suite -->
    <test started-at="2018-11-29T08:14:32Z" name="Third test suite for dataProvider" finished-at="2018-11-29T08:14:32Z" duration-ms="19">
      <class name="triangle_test.Tst_TriangleDataProvider">
        <test-method signature="test_getSquareDataProvider(java.util.ArrayList)[pri:0, instance:triangle_test.Tst_TriangleDataProvider@2898ac89]" started-at="2018-11-29T11:14:32Z" name="test_getSquareDataProvider" data-provider="dataProviderSidesOfTriangle" finished-at="2018-11-29T11:14:32Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[1.0, 2.0, 3.0]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getSquareDataProvider -->
        <test-method signature="test_getSquareDataProvider(java.util.ArrayList)[pri:0, instance:triangle_test.Tst_TriangleDataProvider@2898ac89]" started-at="2018-11-29T11:14:32Z" name="test_getSquareDataProvider" data-provider="dataProviderSidesOfTriangle" finished-at="2018-11-29T11:14:32Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[3.0, 4.0, 5.0]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getSquareDataProvider -->
        <test-method signature="test_getSquareDataProvider(java.util.ArrayList)[pri:0, instance:triangle_test.Tst_TriangleDataProvider@2898ac89]" started-at="2018-11-29T11:14:32Z" name="test_getSquareDataProvider" data-provider="dataProviderSidesOfTriangle" finished-at="2018-11-29T11:14:32Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[3.0E8, 4.0E7, 5.0E7]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getSquareDataProvider -->
      </class> <!-- triangle_test.Tst_TriangleDataProvider -->
    </test> <!-- Third test suite for dataProvider -->
  </suite> <!-- Suite -->
</testng-results>
