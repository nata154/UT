<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-12-02T14:12:58Z" name="Default suite" finished-at="2018-12-02T14:12:58Z" duration-ms="64">
    <groups>
    </groups>
    <test started-at="2018-12-02T14:12:58Z" name="Default test" finished-at="2018-12-02T14:12:58Z" duration-ms="64">
      <class name="triangle_test.Test_GetMessage">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:triangle_test.Test_GetMessage@5b94b04d]" started-at="2018-12-02T17:12:58Z" name="beforeMethod" finished-at="2018-12-02T17:12:58Z" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_setMessage()[pri:0, instance:triangle_test.Test_GetMessage@5b94b04d]" started-at="2018-12-02T17:12:58Z" name="test_setMessage" finished-at="2018-12-02T17:12:58Z" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[There is no setMessage method. We can configure message only in checkTriangle method. What does the customer say?]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: There is no setMessage method. We can configure message only in checkTriangle method. What does the customer say?
	at org.testng.Assert.fail(Assert.java:93)
	at triangle_test.Test_GetMessage.test_setMessage(Test_GetMessage.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_setMessage -->
        <test-method signature="test_getMessage()[pri:0, instance:triangle_test.Test_GetMessage@5b94b04d]" started-at="2018-12-02T17:12:58Z" name="test_getMessage" finished-at="2018-12-02T17:12:58Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_getMessage -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:triangle_test.Test_GetMessage@5b94b04d]" started-at="2018-12-02T17:12:58Z" name="afterMethod" finished-at="2018-12-02T17:12:58Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:triangle_test.Test_GetMessage@5b94b04d]" started-at="2018-12-02T17:12:58Z" name="beforeMethod" finished-at="2018-12-02T17:12:58Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:triangle_test.Test_GetMessage@5b94b04d]" started-at="2018-12-02T17:12:58Z" name="afterMethod" finished-at="2018-12-02T17:12:58Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- triangle_test.Test_GetMessage -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
